Clean Up and Push Back to Remote Git
====================================

Objective:
----------
Demonstrate how to remove unwanted files, update .gitignore, and push changes to the remote GitHub repository.

Steps:
------

1. Check the current status of the repository:
   git status

2. Remove unwanted files and folders from version control (but keep them locally):
   git rm --cached <filename>
   git rm --cached -r <foldername>
   # Example: git rm --cached debug.log
   # Example: git rm --cached -r temp/

3. (Optional) Permanently delete files or folders from your working directory (if needed):
   rm <filename>
   rm -r <foldername>

4. Create or update a .gitignore file to prevent future tracking of unwanted files:
   # In .gitignore, add lines like:
   *.log
   temp/
   node_modules/
   .DS_Store

5. Stage all changes, including file removals and .gitignore updates:
   git add .

6. Commit the cleanup:
   git commit -m "Clean up: remove unwanted files and update .gitignore"

7. Push the committed changes to the remote (GitHub) repository:
   git push origin main
   # Use 'main' or your main branch's name.

8. (Optional) Delete any remote branches you no longer need:
   git push origin --delete <branchname>

Notes:
------
- Always check git status before committing to confirm only the intended changes are present.
- Use .gitignore to keep your repository clean from temporary or sensitive files.


